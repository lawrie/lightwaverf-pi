#! /bin/sh
### BEGIN INIT INFO
# Provides:          lwrfd
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: LightwaveRF MQTT daemon startup
# Description:       Daemon to subscribe to MQTT messages and switch LightwaveRF devices
### END INIT INFO

# author: Lawrie Griffiths
#
# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/bin
DESC="LightwaveRF MQTT daemon"
NAME=lwrfd
DAEMON=/usr/local/bin/lwrfmqtt
DAEMON_NAME=lwrfmqtt
DAEMON_ARGS=""
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Force verbose
VERBOSE="yes"

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
        start-stop-daemon --status --quiet --pidfile $PIDFILE --name $DAEMON_NAME
        if [ $? -ne 0 ];
        then
          start-stop-daemon --start --quiet --pidfile $PIDFILE \
             --exec $DAEMON --  $DAEMON_ARGS
          RETVAL=0
        else
          RETVAL=1
        fi
	return "$RETVAL"
}

#
# Function that stops the daemon/service
#
do_stop()
{
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   other if a failure occurred
        start-stop-daemon --status --quiet --pidfile $PIDFILE --name $DAEMON_NAME
        if [ $? -eq 0 ];
        then        
	  start-stop-daemon --stop --quiet --pidfile $PIDFILE
	  RETVAL=0
        else
          RETVAL=1
        fi
	rm -f $PIDFILE
	return "$RETVAL"
}

#
# Function that sends a reload command to the daemon/service
#
do_reload() {
	# The daemon can reload its configuration on command
        start-stop-daemon --status --quiet --pidfile $PIDFILE --name $DAEMON_NAME
        if [ $? -eq 0 ]; then        
	  RETVAL=0
        else
          RETVAL=1
        fi
	return "$RETVAL"
}

case "$1" in
  start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  status)
	[ "$VERBOSE" != no ] && status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
	;;
  reload)
	[ "$VERBOSE" != no ] && log_daemon_msg "Reloading $DESC" "$NAME"
	do_reload
	[ "$VERBOSE" != no ] && log_end_msg $?
	;;
  restart)
	[ "$VERBOSE" != no ] && log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in  
		0) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		1) [ "$VERBOSE" != no ] && log_end_msg 1 ;; # Old process is still running
		*) [ "$VERBOSE" != no ] && log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
		[ "$VERBOSE" != no ] && log_end_msg 1 ;;
	        esac
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|reload}" >&2
	exit 3
	;;
esac

:


